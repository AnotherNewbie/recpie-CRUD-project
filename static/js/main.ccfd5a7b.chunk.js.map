{"version":3,"sources":["RecipeCreate.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","createRecipe","initialState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","className","id","type","required","placeholder","onChange","RecipeList","recipes","deleteRecipe","length","list","map","recipe","index","key","src","onClick","RecipeData","App","setRecipes","newRecipeList","splice","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAgDeA,MA9Cf,YAAuC,IAAD,IAAfC,EAAe,EAAfA,aAMfC,EAAe,CACnBC,KAAK,GACLC,QAAQ,GACRC,MAAM,GACNC,YAAY,GACZC,YAAY,IAGd,EAAgCC,mBAAS,eAAIN,IAA7C,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACpBF,EAAY,2BAAID,GAAL,kBAAgBG,EAAOT,KAAOS,EAAOC,UASlD,OACE,0BAAMV,KAAK,SAASW,SAPD,SAACC,GACpBA,EAAMC,iBACNf,EAAa,CAACQ,aACdC,EAAYR,KAKV,+BACE,+BACE,4BACE,wBAAIe,UAAU,cAAa,2BAAG,2BAAOC,GAAG,OAAOf,KAAK,OAAOgB,KAAK,OAAOC,UAAU,EAAMC,YAAY,OAAOC,SAAUX,EAAcE,MAAOJ,EAASN,SAClJ,wBAAIc,UAAU,cAAa,2BAAG,8BAAOd,KAAK,WAAZ,qBAA2B,WAA3B,qBAA0C,QAA1C,0BAA2D,GAA3D,4BAA6E,WAA7E,yBAAiGQ,GAAjG,sBAAsHF,EAASL,SAA/H,MAC9B,wBAAIa,UAAU,cAAa,2BAAG,8BAAOd,KAAK,SAAZ,qBAAyB,SAAzB,qBAAsC,OAAtC,0BAAsD,GAAtD,4BAAwE,OAAxE,yBAAwFQ,GAAxF,sBAA6GF,EAASJ,OAAtH,MAC9B,wBAAIY,UAAU,cAAa,2BAAG,8BAAUC,GAAG,cAAcf,KAAK,cAAcgB,KAAK,OAAOC,UAAU,EAAMC,YAAY,cAAcC,SAAUX,EAAcE,MAAOJ,EAASH,gBAC1K,wBAAIW,UAAU,cAAa,2BAAG,8BAAUC,GAAG,cAAcf,KAAK,cAAcgB,KAAK,OAAOC,UAAU,EAAMC,YAAY,cAAcC,SAAUX,EAAcE,MAAOJ,EAASF,gBAC1K,4BACE,4BAAQY,KAAK,UAAb,gBCmBCI,MAxDf,YAA8C,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,aAU5B,GAAGD,EAAQE,OAAO,CAChB,IAAMC,EAAOH,EAAQI,KAAI,SAACC,EAAOC,GAC/B,OACI,wBAAIC,IAAKD,GACT,wBAAIb,UAAU,cACZ,2BAAIY,EAAO1B,OAEb,wBAAIc,UAAU,cACZ,2BAAIY,EAAOzB,UAEb,wBAAIa,UAAU,cACZ,yBAAKe,IAAKH,EAAOxB,SAEnB,wBAAIY,UAAU,cACZ,2BAAIY,EAAOvB,cAEb,wBAAIW,UAAU,cACZ,2BAAIY,EAAOtB,cAEb,4BAAI,4BAAQJ,KAAK,SAAS8B,QAAS,WAtBzCR,EAsBiEK,KAAvD,eAIZ,OACE,yBAAKb,UAAU,eACb,+BACE,+BACE,4BACE,oCACA,uCACA,qCACA,2CACA,2CACA,yCAGJ,+BACGU,KAMP,OAAO,MCjCIO,EAjBI,CACjB,CACE/B,KAAM,uBACNC,QAAS,WACTC,MAAO,gGACPC,YAAa,sJACbC,YAAa,4RAEf,CACEJ,KAAM,YACNC,QAAS,UACTC,MAAO,4EACPC,YAAa,mNACbC,YAAa,kKCcF4B,MA1Bf,WACE,MAA8B3B,mBAAS0B,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KAgBA,OACE,yBAAKnB,UAAU,OACb,gCAAQ,uDACR,kBAAC,EAAD,CAAYO,QAASA,EAASC,aAfb,SAACK,GACpB,IAAIO,EAAa,YAAOb,GACxBa,EAAcC,OAAOR,EAAO,GAC5BM,EAAWC,MAaT,kBAAC,EAAD,CAAcpC,aARG,SAACsC,GACpBH,EAAW,GAAD,mBAAKZ,GAAL,CAAce,EAAU9B,iBChBtC+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ccfd5a7b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({createRecipe}) {\n\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n  \n  const initialState = {\n    name:\"\",\n    cuisine:\"\",\n    photo:\"\",\n    ingredients:\"\",\n    preparation:\"\",\n  };\n\n  const [formData, setFormData] = useState({...initialState});\n\n  const handleChange =({target}) => {\n    setFormData({...formData, [target.name]: target.value});\n  }  \n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createRecipe({formData});\n    setFormData(initialState);\n  }\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"content_td\"><p><input id=\"name\" name=\"name\" type=\"text\" required={true} placeholder=\"Name\" onChange={handleChange} value={formData.name}></input></p></td>\n            <td className=\"content_td\"><p><input name=\"cuisine\" name=\"cuisine\" type=\"text\" required={true} placeholder=\"Cuisine\" onChange={handleChange} value={formData.cuisine}></input></p></td>\n            <td className=\"content_td\"><p><input name=\"photo\" name=\"photo\" type=\"url\" required={true} placeholder=\"URL\" onChange={handleChange} value={formData.photo}></input></p></td>\n            <td className=\"content_td\"><p><textarea id=\"ingredients\" name=\"ingredients\" type=\"text\" required={true} placeholder=\"Ingredients\" onChange={handleChange} value={formData.ingredients}></textarea></p></td>\n            <td className=\"content_td\"><p><textarea id=\"preparation\" name=\"preparation\" type=\"text\" required={true} placeholder=\"Preparation\" onChange={handleChange} value={formData.preparation}></textarea></p></td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction RecipeList({recipes, deleteRecipe}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n\n  const deleteRecipeHandler = (deleteIndex) => {\n    deleteRecipe(deleteIndex);\n  }\n\n  if(recipes.length){    \n    const list = recipes.map((recipe,index) => {\n      return(\n          <tr key={index}>\n          <td className=\"content_td\">\n            <p>{recipe.name}</p>\n          </td>\n          <td className=\"content_td\">\n            <p>{recipe.cuisine}</p>\n          </td>\n          <td className=\"content_td\">\n            <img src={recipe.photo}></img>\n          </td>\n          <td className=\"content_td\">\n            <p>{recipe.ingredients}</p>\n          </td>\n          <td className=\"content_td\">\n            <p>{recipe.preparation}</p>\n          </td>\n          <td><button name=\"delete\" onClick={()=>deleteRecipeHandler(index)}>Delete</button></td>      \n        </tr>\n      )\n    });\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preperation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list}          \n        </tbody>\n      </table>\n    </div>\n  );\n  } else {\n    return null;\n  }\n}\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  // TODO: Add the ability for the <RecipeList /> component to list, edit and delete an existing recipe.\n\n  const deleteRecipe = (index) => {\n    let newRecipeList = [...recipes];\n    newRecipeList.splice(index, 1);\n    setRecipes(newRecipeList);\n  }\n\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n\n  const createRecipe = (newRecipe) =>{    \n    setRecipes([...recipes, newRecipe.formData] );\n  }\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} deleteRecipe={deleteRecipe}/>\n      <RecipeCreate createRecipe={createRecipe}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}